#include "pyboost.h"

BOOST_PYTHON_MODULE(Jawa)
{
    using namespace boost::python;
    //Add some vectors
    
    def("GetSum"      ,  &Utils::GetSum_py       );
    def("GetLumi"     ,  &Utils::GetLumi_py      );
    def("GetLumiError",  &Utils::GetLumiError_py      );
    def("RemoveErrors",  &Utils::RemoveErrors_py );
    def("GetWeightSum",  &Utils::GetWeightSum_py );
    def("GetWeightSum",  &Utils::GetWeightSum2_py );
    def("GetWeightSqSum",&Utils::GetWeightSqSum_py );
    def("GetWeightHist", &Utils::GetWeightHist_py);
    def("GetWeightHist2D",&Utils::GetWeightHist2D_py);
    def("GetRatioHist" , &Utils::GetRatioHist_py);
    def("GetRatioHist2D",&Utils::GetRatioHist2D_py);
    def("geteff"      ,  &Utils::geteff_py       );
    def("geteff"      ,  &Utils::geteff2_py      );
    def("geteff"      ,  &Utils::geteff3_py                   );
    def("getEffVariations"  ,  &Utils::getEffVariations_py    );
    def("getEffErrMatrix"   ,  &Utils::getEffErrMatrix_py     );
    def("getEffErrMatrix"   ,  &Utils::getEffErrMatrix2_py    );
    def("getEffErrMatrix"   ,  &Utils::getEffErrMatrix3_py    );
    def("saveMatrix"        ,  &Utils::saveMatrix_py          );
    def("saveTH1F"          ,  &Utils::saveTH1F_py            );
    def("saveTGraph"        ,  &Utils::saveTGraph_py          );
    def("saveTGraphErrs"    ,  &Utils::saveTGraphErrs_py      );
    def("tgraph2hist"       ,  &Utils::tgraph2hist_py         );
    def("saveAsTree"        ,  &Utils::saveAsTree_py          );
    def("standard_deviation",  &Utils::standard_deviation_py);
    def("MakeEffHist"       ,  &Utils::MakeEffHist_py );
    
    class_<JawaObj>("JawaObj", init<>() )
      .def(init<string, string>() )
      .def(init<string>() )
      .add_property("Verbose",  &JawaObj::GetVerbose, &JawaObj::SetVerbose)
      ;
    
    class_<std::vector<double> >("vect")
      .def(vector_indexing_suite<std::vector<double> >())
      ;
    
    class_<Var>("Var", init<string, string, int, double, double, optional<string> >())
      .def(init<string, Var*, Var*, optional<string> >())
      .def(init<string, Var*, optional<string> >())
      .def("GetName",       &Var::GetName)
      .def("SetVarName",    &Var::SetVarName)
      .def("Add2ndVar",     &Var::Add2ndVar)
      .def("SmearHist",     &Var::SmearHist)
      .def("GetHist",       &Var::GetHist_py)
      .def("ResetHist",     &Var::ResetHist)
      .def("GetVarNames",   &Var::GetVarNames_py)
      .def("GetVal",        &Var::GetVal_py)
      .def("GetExpr",       &Var::GetExpr, return_internal_reference<>())
      .def("GetEdges",      &Var::GetEdges_py)
      .def("GetBinEdges",   &Var::GetBinEdges_py)
      .def("SetVarExp"  ,   &Var::SetVarExp)
      .def("Draw"       ,   &Var::Draw1_py)
      .def("Draw"       ,   &Var::Draw2_py)
      ;

    class_<Var2D>("Var2D", init<string, Var*, Var*, string>())
      .def("GetName",       &Var2D::GetName)
      .def("GetHist",       &Var2D::GetHist_py)
      .def("GetProfile",    &Var2D::GetProfile_py)
      .def("GetProfile2",   &Var2D::GetProfile2_py)
      ;
    class_<Var3D>("Var3D", init<string, Var*, Var*, Var*, string>())
      .def("GetName",       &Var3D::GetName)
      .def("GetHist",       &Var3D::GetHist_py)
      ;
    
    class_<Expr, bases<JawaObj> >("Expr", init<string>())
      .def(self + self)
      .def(self - self)
      .def(self & self)
      .def(self * self)
      .def(self | self)
      .def("GetExpr" ,      &Expr::GetExpr_py)
      //.def("FindFunc",      &Expr::FindFunc)
      //.def("GetBracketExp", &Expr::GetBracketExp_py)
      .def("GetVarNames",   &Expr::GetVarNames_py)
      .def("GetVal",        &Expr::GetVal_py)
      //.def("GetVal",        &Expr::GetVal2_py)
      .def("GetVal",        &Expr::GetVal3_py)

      //.def("GetVal2",        &Expr::GetVal2_py)
      //.def("SetTree",       &Expr::SetTree_py)
      //.def("GetExpressions" ,&Expr::GetExpressions_py)
      //.def("FindNextBracket",&Expr::FindNextBracket)
      .def("GetVal",&Expr::GetVal_py)
      .def("Tokenize", &Expr::Tokenize_py)
      .def("getTokens", &Expr::getTokens_py)
      .def("getRPN"    , &Expr::getRPN_py)
      .def("infixToRPN", &Expr::infixToRPN_py)
      .def("CB", &Expr::CB)
      ;
    
    class_<Template, bases<JawaObj> >("Template", init<string>())
      .def(init<string, PyObject*, PyObject*>())
      .def(init<string, Template*, Template* >())
      .def(init<string, Template* >())
      .def(init<string, boost::python::list&, PyObject* >())
      .def("AddTree",    &Template::AddTree_py)
      .def("AddTree",    &Template::AddTree2_py)
      .def("AddTree",    &Template::AddTree3_py)
      .def("AddTree",    &Template::AddTree4_py)
      //.def("AddTree",    &Template::AddTree5_py)
      .def("AddTree",    &Template::AddTree6_py)
      .def("AddTree",    &Template::AddTree7_py)
      .def("AddTree",    &Template::AddTree8_py)
      .def("SetSelCut",  &Template::SetSelCut_py)
      .def("GetSelCut",  &Template::GetSelCut_py)
      .def("AddTrees",   &Template::AddTrees_py)
      .def("AddTrees",   &Template::AddTrees2_py)
      .def("AddTrees",   &Template::AddTrees3_py)
      .def("AddVar",     &Template::AddVar1_py)
      .def("AddVar",     &Template::AddVar2_py)
      .def("AddVar",     &Template::AddVar3_py)
      .def("AddVars",    &Template::AddVars_py)
      .def("Add2DVar",   &Template::Add2DVar2_py)
      .def("Add2DVar",   &Template::Add2DVar_py)
      .def("Add2DVars",  &Template::Add2DVars_py)
      .def("Add3DVar",   &Template::Add3DVar_py)
      .def("Add3DVars",  &Template::Add3DVars_py)
      .def("ApplyCut",   &Template::ApplyCut)
      .def("FillVars",   &Template::FillVars)
      .def("SaveToFile", &Template::SaveToFile1_py)
      .def("SaveToFile", &Template::SaveToFile2_py)
      .def("IsVerbose",  &Template::IsVerbose)
      .def("GetName",    &Template::GetName)
      .def("Reweight",   &Template::Reweight1_py)
      .def("Reweight",   &Template::Reweight2_py)
      .def("Reweight",   &Template::Reweight3_py)
      .def("Reweight",   &Template::Reweight4_py)
      .def("Reweight",   &Template::Reweight5_py)
      .def("GetHist",    &Template::GetHist_py)
      .def("Scale",      &Template::Scale1_py)
      .def("Scale",      &Template::Scale2_py)
      .def("Unscale",    &Template::Unscale)
      .def("IsFixed",    &Template::IsFixed)
      .def("PrintVars",  &Template::PrintVars)
      .def("SetStyle",   &Template::SetStyle1_py)
      .def("SetStyle",   &Template::SetStyle2_py)
      .def("SetStyle",   &Template::SetStyle3_py)
      .def("StyleHists", &Template::StyleHists)
      .def("NormaliseToEvts",   &Template::NormaliseToEvts1_py)
      .def("NormaliseToEvts",   &Template::NormaliseToEvts2_py)
      .def("NormaliseToMC",     &Template::NormaliseToMC1_py)
      .def("NormaliseToMC",     &Template::NormaliseToMC2_py)
      .def("GetTree",    &Template::GetTree1_py, return_internal_reference<>())
      .def("GetTree",    &Template::GetTree2_py, return_internal_reference<>())
      .def("GetVar",     &Template::GetVar,      return_internal_reference<>())
      .def("GetVariables",&Template::GetVariables_py)
      .def("Get2DVar",   &Template::Get2DVar_py, return_internal_reference<>())
      .def("Get3DVar",   &Template::Get3DVar_py, return_internal_reference<>())
      .def("OutputEvts", &Template::OutputEvts)
      .def("GetEvts",    &Template::GetEvts)
      .def("GetNormEvts",&Template::GetNormEvts)
      .def("Run",        &Template::Run)
      .add_property("Vars",  &Template::GetVariables_py, &Template::SetVars_py)
      .add_property("FitFrac", &Template::GetFitFrac, &Template::SetFitFrac_py)
      .add_property("MaxEvts", &Template::GetMaxEvts, &Template::SetMaxEvts)
      ;


    class_<MWTemplate, bases<Template> >("MWTemplate", init<string>())
      .def(init<string, PyObject*, PyObject*>())
      .def(init<string, MWTemplate*, MWTemplate*>())
      .def("FillVars",   &MWTemplate::FillVars )
      .def("AddWeight",  &MWTemplate::AddWeight)
      .def("GetWeightHist", &MWTemplate::GetWeightHist_py)
      .def("GetWeight2DHist", &MWTemplate::GetWeight2DHist_py)
      .def("ScaleAllWeights", &MWTemplate::ScaleAllWeights)
      .def("PrintWeights", &MWTemplate::PrintWeights)
      .def("SaveToFile",  &MWTemplate::SaveToFile1_py)
      .def("SaveToFile",  &MWTemplate::SaveToFile2_py)
      ;

    class_<Fitter>("Fitter", init<>())
      .def(init<PyObject*, PyObject*, boost::python::list&, optional<string> >())
      //.def("ConstrainParams", &Fitter::ConstrainParams)
      .def("TFracFit",        &Fitter::TFracFit)
      .def("GetData",         &Fitter::GetData_py)
      .def("GetTemplates",    &Fitter::GetTemplates_py)
      //.def("GetFitter",       &Fitter::GetFitter_py)
      .def("GetResults",      &Fitter::GetResults_py)
      .def("SetResults",      &Fitter::SetResults_py)
      .def("GetConstraints",  &Fitter::GetConstraints_py)
      .def("GetNames",        &Fitter::GetNames_py)
      .def("AddConstraint",   &Fitter::AddConstraint_py)
      .def("AddConstraints",  &Fitter::AddConstraints_py)
      .def("AddConstraints",  &Fitter::AddConstraints2_py)
      .def("AddTFractionFitter", &Fitter::AddTFractionFitter)
      .def("ExcludeBins",     &Fitter::ExcludeBins)
      .def("GetVar",          &Fitter::GetVar)
      .add_property("Exclude", &Fitter::GetExclude, &Fitter::SetExclude)
      ;
    
    class_<Tree>("Tree", init<string, PyObject*, optional<double> >())
      .def("GetVal",       &Tree::GetVal_py)
      .def("GetVal",       &Tree::GetVal2_py)
      //.def("SetBranches",  &Tree::SetBranches)
      .def("GetEntry",     &Tree::GetEntry)
      .def("SetBranch",    &Tree::SetBranch)
      .def("GetTTree",     &Tree::GetTTree_py)
      .def("GetWeight",    &Tree::GetWeight)
      .def("SetWeight",    &Tree::SetWeight)
      .def("GetBranchType",&Tree::GetBranchType)
      .def("GetEntryList", &Tree::GetEntryList, return_internal_reference<>())
      .def("GetEntries"  , &Tree::GetEntries)
      .def("GetMean"     , &Tree::GetMean_py)
      .def("GetStdDev"   , &Tree::GetStdDev_py)
      .def("getCorrelationMatrix", &Tree::getCorrelationMatrix_py)
      ;
    class_<Data>("Data", init<string>())
      .def("GetType",      &Data::GetType)
      ;
    class_<EntryList>("EntryList", init<>())
      .def("AddEntry",   &EntryList::AddEntry)
      .def("SetTotEntries",   &EntryList::SetTotEntries)
      .def("SetPassEntries",  &EntryList::SetPassEntries)
      .def("GetTotEntries",   &EntryList::GetTotEntries)
      .def("GetPassEntries",  &EntryList::GetPassEntries)
      //.def("GetExpr",         &EntryList::GetExpr, return_internal_reference<>())
      .def("GetCut",          &EntryList::GetCut)
      //.def("GetList",   &EntryList::GetList)
      ;
    
    class_<AnalysisClass>("AnalysisClass", init<string>())
      .def("SetSelCut",        &AnalysisClass::SetSelCut_py)
      .def("AddData",          &AnalysisClass::AddData_py)
      .def("AddTemplate",      &AnalysisClass::AddTemplate1_py)
      .def("AddTemplate",      &AnalysisClass::AddTemplate2_py)
      .def("AddTemplate",      &AnalysisClass::AddTemplate3_py)
      .def("AddTemplate",      &AnalysisClass::AddTemplate4_py)
      .def("AddTemplate",      &AnalysisClass::AddTemplate5_py)
      .def("StyleTemplates",   &AnalysisClass::StyleTemplates)
      .def("AddVar",           &AnalysisClass::AddVar1_py)
      .def("AddVar",           &AnalysisClass::AddVar2_py)
      .def("AddVar",           &AnalysisClass::AddVar3_py)
      .def("AddVars",          &AnalysisClass::AddVars_py)
      .def("Add2DVar",         &AnalysisClass::Add2DVar)
      .def("Add2DVars",        &AnalysisClass::Add2DVars_py)
      .def("Add3DVars",        &AnalysisClass::Add3DVars_py)
      .def("ApplyCuts",        &AnalysisClass::ApplyCuts)
      .def("FillVars",         &AnalysisClass::FillVars)
      .def("GetTemplate",      &AnalysisClass::GetTemplate, return_internal_reference<>())
      .def("TFracFit"   ,      &AnalysisClass::TFracFit_py)
      .def("TFracFit"   ,      &AnalysisClass::TFracFit2_py)
      .def("TFracFit"   ,      &AnalysisClass::TFracFit3_py)
      .def("CombTFracFit" ,    &AnalysisClass::CombTFracFit_py)
      .def("RedoFit"   ,       &AnalysisClass::RedoFit_py)
      .def("MakeStacks",       &AnalysisClass::MakeStacks)
      .def("SaveToFile",       &AnalysisClass::SaveToFile1_py)
      .def("SaveToFile",       &AnalysisClass::SaveToFile2_py)
      .def("GetLumi"   ,       &AnalysisClass::GetLumi_py)
      .def("GetFitter" ,       &AnalysisClass::GetFitter, return_internal_reference<>())
      .def("GetName"   ,       &AnalysisClass::GetName )
      .def("GetStack"  ,       &AnalysisClass::GetStack_py)
      .def("AddFitter",        &AnalysisClass::AddFitter_py)
      .def("ClearFitter",      &AnalysisClass::ClearFitter)
      .def("ApplyFitResults",  &AnalysisClass::ApplyFitResults_py)
      .def("RemoveFromFit",    &AnalysisClass::RemoveFromFit)
      .def("RemoveFromStack",  &AnalysisClass::RemoveFromStack)
      .def("Remove"         ,  &AnalysisClass::Remove)
      .def("AddToFit",         &AnalysisClass::AddToFit)
      .def("AddToStack",       &AnalysisClass::AddToStack)
      .def("ReplaceInStack",   &AnalysisClass::ReplaceInStack)
      .def("ReplaceInFit",     &AnalysisClass::ReplaceInFit)
      .def("Replace",          &AnalysisClass::Replace)
      .def("UnscaleTemplates", &AnalysisClass::UnscaleTemplates)
      .def("DrawFitted",       &AnalysisClass::DrawFitted_py)
      .def("GetChi2nDoF",      &AnalysisClass::GetChi2nDoF)
      .def("Run",              &AnalysisClass::Run)
      .add_property("ToFit",   &AnalysisClass::GetToFit_py, &AnalysisClass::SetToFit_py)
      .add_property("ToStack", &AnalysisClass::GetToStack_py, &AnalysisClass::SetToStack_py)
      ;
    
    class_<Eff>("Eff", init<const char*, double, double, double>())
      .def(init<const char*, int, int>())
      .def(init<const char*, double, double>())
      .add_property("Eff",  &Eff::GetEff, &Eff::SetEff)
      .add_property("EffErrHi",  &Eff::GetEffErrHi, &Eff::SetEffErrHi)
      .add_property("EffErrLo",  &Eff::GetEffErrLo, &Eff::SetEffErrLo)
      //.def("GetEff",           &Eff::GetEff)
      //.def("GetEffErrHi",      &Eff::GetEffErrLo)
      //.def("GetEffErrLo",      &Eff::GetEffErrHi)
      //.def("SetEff",           &Eff::SetEff)
      //.def("SetEffErrHi",      &Eff::SetEffErrLo)
      //.def("SetEffErrLo",      &Eff::SetEffErrHi)
      .def("Print",            &Eff::Print)
      .def("AddSystematic",    &Eff::AddSystematic)
      .def("AddInvSystematic", &Eff::AddInvSystematic)
      ;
    
    class_<EffVar, bases<Var> >("EffVar", init<string, string, int, double, double, optional<string> >())
      .def(init<string, PyObject*, string>())
      .def(init<string, PyObject*>())
      //.def("GetBins",         &EffVar::GetBins)
      .def("GetLo",           &EffVar::GetLo)
      .def("GetHi",           &EffVar::GetHi)
      .def("GetVar",          &EffVar::GetVar)
      .def("GetName",         &EffVar::GetName)
      .def("GetTotHist",      &EffVar::GetTotHist_py)
      .def("GetPassHist",     &EffVar::GetPassHist_py)
      .def("MakeTGraph",      &EffVar::MakeTGraph)
      .def("MakeEffHist",     &EffVar::MakeEffHist)
      .def("AddSystematic",   &EffVar::AddSystematic1)
      .def("AddSystematic",   &EffVar::AddSystematic2)
      .def("AddInvSysematic", &EffVar::AddInvSystematic)
      //.def("GetBinEdges",     &EffVar::GetBinEdges_py)
      .def("GetBinEdgesX",    &EffVar::GetBinEdgesX_py)
      .def("GetEffGraph",     &EffVar::GetEffGraph_py)
      .def("GetSmearedEffGraph",&EffVar::GetSmearedEffGraph_py)
      //.def("GetEdges",        &EffVar::GetEdges_py)
      .def("FindBin",         &EffVar::FindBin)
      //.def("GetExpr",       &Var::GetExpr, return_internal_reference<>())
      .def("SetVarName",    &Var::SetVarName)
      .def("RemoveErrors",  &EffVar::RemoveErrors)
      ;
    
    class_<Tune>("Tune", init<string, Tree*, Tree*, Expr*, Var*, optional<string> >())
      .def("fillVals", &Tune::fillVals)
      .def("tune",     &Tune::tune)
      .def("standard_deviation",     &Tune::standard_deviation_py)
      .def("GetStdDevs",  &Tune::GetStdDevs_py)
      .def("GetDataVec",  &Tune::GetDataVec)
      .def("getCorrelatedRandoms", &Tune::getCorrelatedRandoms_py)
      .def("cholesky", &Tune::cholesky_py)
      .def("SaveToFile", &Tune::SaveToFile1_py)
      .def("SaveToFile", &Tune::SaveToFile2_py)
      ;

    class_<EffVar2D, bases<Var2D> >("EffVar2D", init<string, EffVar*, EffVar*, optional<string> >())
      .def(init<string, PyObject*, optional<string> >())
      .def(init<string, string, optional<string> >())
      .def("GetTotHist",    &EffVar2D::GetTotHist_py)
      .def("GetPassHist",   &EffVar2D::GetPassHist_py)
      .def("Get2DEffGraph", &EffVar2D::Get2DEffGraph_py)
      .def("GetName",       &EffVar2D::GetName)
      ;
    
    class_<EfficiencyClass>("EfficiencyClass", init<string>())
      .def(init<string, EfficiencyClass*, EfficiencyClass*>())
      .def("Run"    ,             &EfficiencyClass::Run)
      .def("AddTree",             &EfficiencyClass::AddTree_py)
      .def("AddTree",             &EfficiencyClass::AddTree2_py)
      .def("AddTrees",            &EfficiencyClass::AddTrees_py)
      .def("AddTrees",            &EfficiencyClass::AddTrees2_py)
      .def("SetSelectionCut",     &EfficiencyClass::SetSelectionCut_py)
      .def("SetPassCut",          &EfficiencyClass::SetPassCut_py)
      .def("AddVar",              &EfficiencyClass::AddVar1_py)
      .def("AddVar",              &EfficiencyClass::AddVar2_py)
      .def("AddVar",              &EfficiencyClass::AddVar3_py)
      .def("AddVar",              &EfficiencyClass::AddVar4_py)
      .def("AddVar",              &EfficiencyClass::AddVar5_py)
      .def("Add2DVar",            &EfficiencyClass::Add2DVar_py)
      .def("Add2DVars",           &EfficiencyClass::Add2DVars_py)
      .def("AddVars",             &EfficiencyClass::AddVars_py)
      .def("SetEffRange",         &EfficiencyClass::SetEffRange)
      .def("MakeEntryLists",      &EfficiencyClass::MakeEntryLists)
      .def("MakeEfficiencyGraph", &EfficiencyClass::MakeEfficiencyGraph_py)
      .def("PrintEfficiencies",   &EfficiencyClass::PrintEfficiencies)
      .def("SaveToFile",          &EfficiencyClass::SaveToFile)
      .def("SaveToFile",          &EfficiencyClass::SaveToFile_py)
      .def("LoadFromFile",        &EfficiencyClass::LoadFromFile)
      .def("LoadFromFile",        &EfficiencyClass::LoadFromFile_py)
      .def("GetVar",              &EfficiencyClass::GetVar, return_internal_reference<>())
      .def("Get2DVar",            &EfficiencyClass::Get2DVar, return_internal_reference<>())
      .def("CorrectGraphs",       &EfficiencyClass::CorrectGraphs)
      .def("AddInvSystematic",    &EfficiencyClass::AddInvSystematic)
      .def("AddSystematic",       &EfficiencyClass::AddSystematic1_py)
      .def("AddSystematic",       &EfficiencyClass::AddSystematic2_py)
      .def("AddSystematic",       &EfficiencyClass::AddSystematic3_py)
      .def("PrintTwikiEfficiencies", &EfficiencyClass::PrintTwikiEfficiencies)
      .def("PrintVars",           &EfficiencyClass::PrintVars)
      .def("GetCorrectedEfficiency", &EfficiencyClass::GetCorrectedEfficiency1_py)
      .def("GetCorrectedEfficiency", &EfficiencyClass::GetCorrectedEfficiency2_py)
      .def("GetCorrectedEfficiency", &EfficiencyClass::GetCorrectedEfficiency3_py)
      .def("GetTotEff", &EfficiencyClass::GetTotEff_py)
      .def("GetTotEffErrLo", &EfficiencyClass::GetTotEffErrLo_py)
      .def("GetTotEffErrHi", &EfficiencyClass::GetTotEffErrHi_py)
      .def("GetTotEffRWErr", &EfficiencyClass::GetTotEffRWErr)
      .def("GetTotHist", &EfficiencyClass::GetTotHist_py)
      .def("GetPassHist", &EfficiencyClass::GetPassHist_py)
      .def("Reweight",   &EfficiencyClass::Reweight1_py)
      .def("Reweight",   &EfficiencyClass::Reweight2_py)
      .def("Reweight",   &EfficiencyClass::Reweight3_py)
      .def("Reweight",   &EfficiencyClass::Reweight4_py)
      .def("Reweight",   &EfficiencyClass::Reweight5_py)
      .def("ReweightEff",&EfficiencyClass::ReweightEff_py)
      .def("RemoveErrors", &EfficiencyClass::RemoveErrors)
      .add_property("Verbose",  &EfficiencyClass::GetVerbose, &EfficiencyClass::SetVerbose)
      .add_property("ScaleErrs",  &EfficiencyClass::GetScaleErr, &EfficiencyClass::SetScaleErr)
      ;
    class_<Fit>("Fit", init<string, string>())
      .def("GetExpr",  &Fit::GetExpr, return_internal_reference<>())
      .def("GetTF1" ,  &Fit::GetTF1_py)
      .def("FitHist",  &Fit::FitHist_py)
      .def("SetParameter",  &Fit::SetParameter)
      .def("SetParLimits",  &Fit::SetParLimits)
      .def("PrintParameters", &Fit::PrintParameters)
      .def("SetRange", &Fit::SetRange)
      ;
    
    class_<FitAnalysis>("FitAnalysis", init<string, string, string>())
      .def("SetVal",   &FitAnalysis::SetVal1_py)
      .def("SetVal",   &FitAnalysis::SetVal2_py)
      .def("FixVal",   &FitAnalysis::FixVal)
      .def("SetRange", &FitAnalysis::SetRange)
      .def("FitIt",    &FitAnalysis::FitIt1_py)
      .def("FitIt",    &FitAnalysis::FitIt2_py)
      .def("Init",     &FitAnalysis::Init)
      .def("SetToMean",&FitAnalysis::SetToMean)
      .def("SetToEntries",&FitAnalysis::SetToEntries)
      .def("SetToMax",&FitAnalysis::SetToMax)
      .def("SetToRMS",&FitAnalysis::SetToRMS)
      .def("GetHist", &FitAnalysis::GetHist_py)
      .def("GetHist", &FitAnalysis::GetHist2_py)
      .def("GetParHist", &FitAnalysis::GetParHist_py)
      .def("SaveToFile", &FitAnalysis::SaveToFile1_py)
      .def("SaveToFile", &FitAnalysis::SaveToFile2_py)
      ;
    
}
